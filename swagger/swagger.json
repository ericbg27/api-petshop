{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple example NodeJS API for a petshop site",
        "version": "1.0.0",
        "title": "API Petshop",
        "contact": {
            "email": "abc@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": ["http"],
    "host": "localhost:3000",
    "basePath": "/api",
    "paths" : {
        "/suppliers": {
            "get": {
                "summary": "Get all available suppliers",
                "description:": "Get all available suppliers",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supplier"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/FailedOp"
                        }
                    }
                }
            }
        },
        "/suppliers/:supplierId": {
            "get": {
                "summary": "Get supplier with respective ID",
                "description:": "Get supplier with respective ID",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "supplierId",
                        "in": "path",
                        "description": "ID of the supplier to be retrieved",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/FailedOp"
                        }
                    }
                }
            }
        },
        "/suppliers/login": {
            "post": {
                "summary": "Login supplier",
                "description:": "Login supplier given password and email",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "description": "The supplier's email",
                        "required": true,
                        "type": "string",
                        "example": "supplier@email.com"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "The supplier's password",
                        "required": true,
                        "type": "string",
                        "example": "1234"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. Supplier is logged in and session is (possibly) stored"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong password provided for given email",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    },
                    "404": {
                        "description": "Not Found. No supplier with the provided email was found",
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        }
                    },
                    "500": {
                        "description": "Server error. Failed to login.",
                        "schema": {
                            "$ref": "#/definitions/FailedOp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Supplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "supplier@email.com"
                },
                "password": {
                    "type": "string",
                    "example": "81dc9bdb52d04dc20036dbd8313ed055"
                },
                "company": {
                    "type": "string",
                    "example": "A Company"
                },
                "category": {
                    "type": "string",
                    "description": "Can only one of the following: [food, toys]",
                    "example": "food"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-04-13T13:43:04.000Z"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2022-04-13T13:43:04.000Z"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FailedOp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Value defined by enum. Current value: 2",
                    "example": 2
                },
                "name": {
                    "type": "string",
                    "description": "Fixed value. Current value: 'failed_op'",
                    "example": "failed_op"
                },
                "message": {
                    "type": "string",
                    "example": "Failed to [OP] [PROP]"
                },
                "status": {
                    "type": "integer",
                    "description": "HTTP 500 status code",
                    "example": 500
                }
            }
        },
        "Unauthorized": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Value defined by enum. Current value: 7",
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "description": "Fixed value. Current value: 'unauthorized'",
                    "example": "unauthorized"
                },
                "message": {
                    "type": "string",
                    "example": "Wrong credentials provided."
                },
                "status": {
                    "type": "integer",
                    "description": "HTTP 401 status code",
                    "example": 401
                }
            }
        },
        "NotFound": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Value defined by enum. Current value: 6",
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "description": "Fixed value. Current value: 'not_found'",
                    "example": "not_found"
                },
                "message": {
                    "type": "string",
                    "example": "User with ID [ID] was not found in the database"
                },
                "status": {
                    "type": "integer",
                    "description": "HTTP 404 status code",
                    "example": 404
                }
            }
        }
    }
}