{
  "Supplier": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "example": 1
      },
      "email": {
        "type": "string",
        "example": "supplier@email.com"
      },
      "password": {
        "type": "string",
        "example": "81dc9bdb52d04dc20036dbd8313ed055"
      },
      "company": {
        "type": "string",
        "example": "A Company"
      },
      "category": {
        "type": "string",
        "description": "Can only one of the following: [food, toys]",
        "example": "food"
      },
      "createdAt": {
        "type": "string",
        "example": "2022-04-13T13:43:04.000Z"
      },
      "updatedAt": {
        "type": "string",
        "example": "2022-04-13T13:43:04.000Z"
      },
      "version": {
        "type": "integer",
        "example": 1
      }
    }
  },
  "Product": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "example": 1
      },
      "supplierId": {
        "type": "integer",
        "example": 1
      },
      "name": {
        "type": "string",
        "example": "A Product"
      },
      "price": {
        "type": "number",
        "example": "15.50"
      },
      "quantity": {
        "type": "integer",
        "example": "10"
      },
      "description": {
        "type": "string",
        "example": "This is the product's description"
      },
      "createdAt": {
        "type": "string",
        "example": "2022-04-13T13:43:04.000Z"
      },
      "updatedAt": {
        "type": "string",
        "example": "2022-04-13T13:43:04.000Z"
      },
      "version": {
        "type": "integer",
        "example": 1
      }
    }
  },
  "FailedOp": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Value defined by enum. Current value: 2",
        "example": 2
      },
      "name": {
        "type": "string",
        "description": "Fixed value. Current value: 'failed_op'",
        "example": "failed_op"
      },
      "message": {
        "type": "string",
        "example": "Failed to [OP] [PROP]"
      },
      "status": {
        "type": "integer",
        "description": "HTTP 500 status code",
        "example": 500
      }
    }
  },
  "Unauthorized": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Value defined by enum. Current value: 7",
        "example": 6
      },
      "name": {
        "type": "string",
        "description": "Fixed value. Current value: 'unauthorized'",
        "example": "unauthorized"
      },
      "message": {
        "type": "string",
        "example": "Wrong credentials provided."
      },
      "status": {
        "type": "integer",
        "description": "HTTP 401 status code",
        "example": 401
      }
    }
  },
  "NotFound": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Value defined by enum. Current value: 6",
        "example": 6
      },
      "name": {
        "type": "string",
        "description": "Fixed value. Current value: 'not_found'",
        "example": "not_found"
      },
      "message": {
        "type": "string",
        "example": "User with ID [ID] was not found in the database"
      },
      "status": {
        "type": "integer",
        "description": "HTTP 404 status code",
        "example": 404
      }
    }
  },
  "AlreadyExists": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Value defined by enum. Current value: 1",
        "example": 1
      },
      "name": {
        "type": "string",
        "description": "Fixed value. Current value: 'already_exists'",
        "example": "already_exists"
      },
      "message": {
        "type": "string",
        "example": "[PROP] already exists"
      },
      "status": {
        "type": "integer",
        "description": "HTTP 400 status code",
        "example": 400
      }
    }
  },
  "BadRequest": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Value defined by enum. Current value: 5",
        "example": 5
      },
      "name": {
        "type": "string",
        "description": "Fixed value. Current value: 'bad_request'",
        "example": "bad_request"
      },
      "message": {
        "type": "string",
        "example": "Bad Request"
      },
      "status": {
        "type": "integer",
        "description": "HTTP 400 status code",
        "example": 400
      }
    }
  }
}